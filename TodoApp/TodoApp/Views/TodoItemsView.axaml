<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="clr-namespace:TodoApp.ViewModels"
			 xmlns:converters="using:TodoApp.Converters"
             xmlns:icons="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="TodoApp.Views.TodoItemsView"
             x:DataType="vm:TodoItemsViewModel"
             x:CompileBindings="True"
			 Background="#f9f8f7">

	<Design.DataContext>
		<!-- This only sets the DataContext for the previewer in an IDE,
         to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
		<vm:TodoItemsViewModel />
	</Design.DataContext>

	<UserControl.Resources>
		<converters:BoolToColorConverter x:Key="BoolToColorConverter" />
		<converters:DateToSolidColorConverter x:Key="DateToColorConverter" />
		<converters:DateToIconKindConverter x:Key="DateToIconKindConverter" />
		<converters:DateToBoolConverter x:Key="DateToBoolConverter" />

		<SolidColorBrush x:Key="Success">#198754</SolidColorBrush>
	</UserControl.Resources>

	<UserControl.Styles>
		<Style Selector="icons|MaterialIcon">
			<Setter Property="Width" Value="20"/>
			<Setter Property="Height" Value="20"/>
		</Style>
		
		<Style Selector="ToggleButton.mark_checkbox:checked > StackPanel > icons|MaterialIcon">
			<Setter Property="Kind" Value="CheckboxMarkedCircleOutline" />
			<Setter Property="Foreground" Value="{DynamicResource Success}" />
		</Style>

		<Style Selector="ToggleButton.mark_checkbox:pointerover /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="Background" Value="Transparent" />
		</Style>

		<Style Selector="ToggleButton.mark_checkbox:pressed /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="Background" Value="Transparent" />
		</Style>

		<Style Selector="ToggleButton.mark_checkbox /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="Background" Value="Transparent" />
		</Style>

		<Style Selector="ToggleButton.mark_checkbox:unchecked > StackPanel > icons|MaterialIcon">
			<Setter Property="Kind" Value="CheckboxBlankCircleOutline" />
			<Setter Property="Foreground" Value="{DynamicResource SystemControlForegroundBaseHighBrush}" />
		</Style>

		<Style Selector="TextBlock.h1">
			<Setter Property="FontSize" Value="18"></Setter>
			<Setter Property="FontFamily" Value="Bold"></Setter>
		</Style>

		<Style Selector="TextBlock.h2">
			<Setter Property="FontSize" Value="14"></Setter>
			<Setter Property="FontFamily" Value="Normal"></Setter>
		</Style>

		<Style Selector="Button.hyper_link">
			<Setter Property="Foreground" Value="{DynamicResource SystemAccentColor}" />
			<Setter Property="Cursor" Value="Hand" />
			<Setter Property="BorderThickness" Value="0" />
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="Template">
				<ControlTemplate>
					<ContentPresenter Content="{TemplateBinding Content}">
						<ContentPresenter.Styles>
							<Style Selector="TextBlock">
								<Setter Property="Foreground" Value="{TemplateBinding Foreground}"/>
								<Setter Property="FontSize" Value="{TemplateBinding FontSize}"/>
								<Setter Property="TextDecorations" Value="Underline"/>
							</Style>
						</ContentPresenter.Styles>
					</ContentPresenter>
				</ControlTemplate>
			</Setter>
		</Style>

		<Style Selector="Button.hyper_link:pointerover">
			<Setter Property="Foreground" Value="Blue" />
		</Style>

		<Style Selector="Button.hyper_link:pressed">
			<Setter Property="Foreground" Value="Blue" />
		</Style>
	</UserControl.Styles>

	<ScrollViewer>
		<Grid RowDefinitions="1* 5* 1*">

			<!--<Border
				Margin="10"
				Width="400"
							CornerRadius="10"
				Height="250"
				Background="Red"
				BoxShadow="10 10 20 0.5 blue"
				ClipToBounds="False">

			</Border>-->
			
			<Button Margin="10" Width="40" Height="40" Command="{Binding OpenPopupCommand}">
				<DockPanel LastChildFill="True">
					<icons:MaterialIcon Width="40" Height="40" Kind="Add" DockPanel.Dock="Top"/>
				</DockPanel>
			</Button>

			<Button Margin="10" Width="40" Height="40" Command="{Binding GetNotDueItemsCommand}" HorizontalAlignment="Right">
				<DockPanel LastChildFill="True">
					<icons:MaterialIcon Width="40" Height="40" Kind="Filter" DockPanel.Dock="Top"/>
				</DockPanel>
			</Button>

			<Button Margin="10 10 60 10" Width="40" Height="40" Command="{Binding GetAllItemsCommand}" HorizontalAlignment="Right">
				<DockPanel LastChildFill="True">
					<icons:MaterialIcon Width="40" Height="40" Kind="Reload" DockPanel.Dock="Top"/>
				</DockPanel>
			</Button>

			<TextBlock HorizontalAlignment="Center" FontSize="25" FontWeight="Bold" Grid.Row="0" Margin="10">Todo List</TextBlock>
			<TextBlock HorizontalAlignment="Center" VerticalAlignment="Bottom" FontSize="25" FontWeight="Bold" Grid.Row="2" Margin="10"
					   Text="{Binding ChatResponse}"></TextBlock>
			<ItemsRepeater Items="{Binding TodoItems}" Grid.Row="1" HorizontalAlignment="Center" Name="Repeater">
				<ItemsRepeater.Layout>
					<UniformGridLayout></UniformGridLayout>
				</ItemsRepeater.Layout>
				<ItemsRepeater.ItemTemplate>
					<DataTemplate x:DataType="vm:TodoItemViewModel">
						<Border
							Margin="10 5 10 5"
							CornerRadius="10"
							Background="White"
							BoxShadow="10 10 20 0.5 #bfbfbf"
							Width="400"
							Height="250">
							<Grid
							RowDefinitions="10 2* 5 2* 5 1* 5 1* 5 0.5* 5 1* 10"
							ColumnDefinitions="10 1* 10">
								<StackPanel
									Grid.Row="1"
									Grid.Column="1"
									Orientation="Horizontal"
									VerticalAlignment="Center"
									Spacing="10">
									<ToggleButton
										Classes="mark_checkbox"
										Width="35"
										Height="35"
										VerticalAlignment="Center"
										IsChecked="{Binding IsDone, Mode=TwoWay}">
										<StackPanel>
											<icons:MaterialIcon
												Width="25"
												Height="25">
											</icons:MaterialIcon>
										</StackPanel>
									</ToggleButton>
									<TextBlock
										Classes="h1"
										Text="{Binding Title}"
										HorizontalAlignment="Stretch"
										MaxWidth="350"
										MaxLines="2"
										TextWrapping="Wrap"
										TextTrimming="WordEllipsis"
										VerticalAlignment="Center">
									</TextBlock>
								</StackPanel>
								<TextBlock
									Grid.Row="3"
									Grid.Column="1"
									Classes="h1"
									Text="{Binding Description}"
									HorizontalAlignment="Stretch"
									MaxWidth="380"
									MaxLines="4"
									TextWrapping="Wrap"
									TextTrimming="WordEllipsis"
									VerticalAlignment="Center">
								</TextBlock>
								<Button
									Grid.Row="5"
									Grid.Column="1"
									Classes="hyper_link"
									VerticalAlignment="Center"
									HorizontalAlignment="Left">
									<TextBlock
										Text="View More" />
								</Button>
								<Grid
									Grid.Row="7"
									Grid.Column="1"
									VerticalAlignment="Center">
									<Button
										IsEnabled="{Binding DueDate, Converter={StaticResource DateToBoolConverter}}"
										VerticalAlignment="Center"
										HorizontalAlignment="Left">
										<StackPanel
											Orientation="Horizontal"
											Spacing="10">
											<icons:MaterialIcon
												Foreground="{Binding DueDate, Converter={StaticResource DateToColorConverter}}"
												VerticalAlignment="Center"
												Kind="{Binding DueDate, Converter={StaticResource DateToIconKindConverter}}"/>
											<TextBlock
												Foreground="{Binding DueDate, Converter={StaticResource DateToColorConverter}}"
												Text="{Binding DueDate}"
												VerticalAlignment="Center"
											/>
										</StackPanel>
									</Button>
									<Button
										Width="30"
										Height="30"
										VerticalAlignment="Center"
										HorizontalAlignment="Right"
										Background="Transparent">
										<DockPanel LastChildFill="True">
											<icons:MaterialIcon
												Kind="DotsHorizontal"
												DockPanel.Dock="Top"/>
										</DockPanel>
										<Button.Flyout>
											<MenuFlyout
												ShowMode="TransientWithDismissOnPointerMoveAway"
												Placement="RightEdgeAlignedTop">
												<MenuItem
													Header="Delete"
													Command="{ReflectionBinding #Repeater.DataContext.DeleteCommand}"
													CommandParameter="{Binding .}">
													<MenuItem.Icon>
														<icons:MaterialIcon
															Kind="TrashCanOutline">
														</icons:MaterialIcon>
													</MenuItem.Icon>
												</MenuItem>
											</MenuFlyout>
										</Button.Flyout>
									</Button>
								</Grid>
								<Border
									Grid.Row="9"
									Grid.Column="1"
									HorizontalAlignment="Stretch"
									BorderThickness="1"
									BorderBrush="{DynamicResource SystemControlForegroundBaseLowBrush}"
									VerticalAlignment="Bottom"/>
								<Button
									Grid.Row="11"
									Grid.Column="1"
									Command="{ReflectionBinding #Repeater.DataContext.CalculateMassCommand}"
									CommandParameter="{Binding .}"
									VerticalAlignment="Center"
									HorizontalAlignment="Center">
									<StackPanel
										Orientation="Horizontal"
										Spacing="10">
										<icons:MaterialIcon
											VerticalAlignment="Center"
											Kind="RobotConfused"/>
										<TextBlock
											Text="Ask Chat"
											VerticalAlignment="Center"
											/>
									</StackPanel>
								</Button>
							</Grid>
						</Border>
					</DataTemplate>
				</ItemsRepeater.ItemTemplate>
			</ItemsRepeater>

		</Grid>
	</ScrollViewer>
</UserControl>
